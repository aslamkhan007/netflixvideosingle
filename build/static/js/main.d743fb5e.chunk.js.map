{"version":3,"sources":["Header.js","axios.js","request.js","Banner.js","Row.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","show","setShow","useEffect","window","addEventListener","scrollY","removeEventListener","className","src","alt","instance","axios","create","baseURL","APIKEY","request","fetchTrending","fetchNetFlixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorroMovies","fetchRomanticMovies","fetchDocumentaries","Banner","str","n","movies","setMovies","a","get","req","data","results","Math","floor","random","length","console","log","fetchdata","style","backgroundSize","backgroundRepeat","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","trailerUrl","setTrailerUrl","fetchData","map","movie","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","handleClick","poster_path","id","videoId","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d743fb5e.chunk.js","sourcesContent":["\r\nimport React, { useState , useEffect } from 'react';\r\nimport './Header.css';\r\nfunction Header (){\r\n    const [show, setShow] = useState(false);\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY>100){\r\n                setShow(true);\r\n                \r\n            }\r\n            else{\r\n                setShow(false);\r\n            }\r\n        })\r\n\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\");\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <div className={`header ${show && \"header__black\"}`}>\r\n            <img className=\"header__logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png\"\r\n            alt=\"\"\r\n            />\r\n            <img className=\"header__userIcon\"\r\n            src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n            alt=\"\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n     baseURL:\"https://api.themoviedb.org/3\"\r\n    \r\n})\r\n\r\nexport default instance;"," const APIKEY= \"c28312b07a876384bf0c8c2481874c7f\"\r\n //const APIKEY = \"143bebe5e619280a37d188e20fe3a5ad\";\r\n\r\nconst request={\r\n    fetchTrending :`/trending/all/week?api_key=${APIKEY}&language=en-US`,\r\n   \r\n     fetchNetFlixOriginals:`/discover/tv?api_key=${APIKEY}&with_networks=213`,\r\n   // fetchNetFlixOriginals:`/discover/tv?api_key=${APIKEY}&with_networks=213`,\r\n    // fetchNetFlixOriginals:`/discover/movie?api_key=${APIKEY}`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${APIKEY}&\r\n    language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${APIKEY}&with_genres=28`,\r\n    \r\n    fetchComedyMovies: `/discover/movie?api_key=${APIKEY}&with_genres=35`,\r\n    \r\n    fetchHorroMovies: `/discover/movie?api_key=${APIKEY}&with_genres=27`,\r\n    \r\n    fetchRomanticMovies: `/discover/movie?api_key=${APIKEY}&with_genres=10749`,\r\n    \r\n    fetchDocumentaries: `/discover/movie?api_key=${APIKEY}&with_genres=99`\r\n    \r\n    // fetchTreding: `/trending/all/week?api_key=${APIKEY}&language=en-US`,\r\n    // fetchNetFlixOriginals:`/discover/movie?api_key=${APIKEY}`,\r\n    // fetchTopRated:`/movie/top_rated?api_key=${APIKEY}&language=en-US`,\r\n    // fetchActionMovies:`/discover/movie?api_key=${APIKEY}&with_genres=28`,\r\n    // fetchComedyMovies:`/discover/movie?api_key=${APIKEY}&with_genres=35`,\r\n    // fetchHorroMovies:`/discover/movie?api_key=${APIKEY}&with_genres=27`,\r\n    // fetchRomanticMovies:`/discover/movie?api_key=${APIKEY}&with_genres=10749`,\r\n    // fetchDocumentaries:`/discover/movie?api_key=${APIKEY}&with_genres=99`\r\n    \r\n}\r\n\r\nexport default request;","import React,{useState,useEffect} from \"react\";\r\nimport \"./Banner.css\";\r\nimport axios from './axios';\r\nimport request from \"./request\";\r\n\r\n\r\n \r\n\r\n\r\nfunction Banner() {\r\n\r\n\r\n\r\nconst [movies,setMovies] = useState([])\r\nuseEffect(()=>{\r\n  \r\nasync function fetchdata(){\r\n  const req = await axios.get(request.fetchNetFlixOriginals)\r\n  setMovies(req.data.results[\r\n    Math.floor(Math.random()*req.data.results.length)\r\n  ])\r\n  console.log ( req.data.results)\r\n} \r\n  fetchdata();\r\n},[])\r\n \r\nfunction trucateDesc(str,n){\r\n  return str?.length > n ? str.substr(0,n-1) +\"....\":str\r\n}\r\n  return (\r\n\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"none\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movies?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">{movies?.title || movies?.name || movies?.original_name}</h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">play</button>\r\n          <button className=\"banner__button\">my List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">{trucateDesc(movies?.overview,100)}</h1>\r\n      </div>\r\n      <div className=\"banner__fadeBottom\">\r\n\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Row.css';\r\nimport axios from './axios';\r\nimport YouTube from 'react-youtube'\r\nimport movieTrailer from 'movie-trailer'\r\n\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n    const [movies, setMovies] = useState([])\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl)\r\n            setMovies(request.data.results)\r\n            console.log(request.data.results)\r\n            return request;\r\n        }\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        }\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\");\r\n        } else {\r\n            movieTrailer(movie?.name || \"\")\r\n            .then((url) => {\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            })\r\n            .catch(() => console.log('Temporary Unavailable'))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = \"row\">\r\n            {title}\r\n            <div className = \"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img \r\n                        key={movie.id}\r\n                        onClick = {() => handleClick(movie)}\r\n                        className = {`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                        src = {`${baseUrl}${\r\n                                    isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n                        alt = {movie.name} />\r\n                ))}\r\n            </div>\r\n                        {trailerUrl && <YouTube videoId = {trailerUrl} opts = {opts}/> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import Header from \"./Header\";\nimport \"./App.css\";\nimport Banner from \"./Banner\";\nimport Row from \"./Row\";\nimport request from \"./request\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Banner></Banner>\n      <Row\n        isLargeRow={true}\n        title=\"NETFLIX ORIGINAL\"\n        fetchUrl={request.fetchNetFlixOriginals}\n      ></Row>\n       <Row\n        isLargeRow={false}\n        title=\"Tranding Now\"\n        fetchUrl={request.fetchTrending}\n      ></Row>\n\n      <Row\n        isLargeRow={false}\n        title=\"Top Rated\"\n        fetchUrl={request.fetchTopRated}\n      ></Row>\n       <Row\n        isLargeRow={false}\n        title=\"Action Movies\"\n        fetchUrl={request.fetchActionMovies}\n      ></Row>\n       <Row\n        isLargeRow={false}\n        title=\"Horror Movies\"\n        fetchUrl={request.fetchHorroMovies}\n      ></Row>\n       <Row\n        isLargeRow={false}\n        title=\"Romance Now\"\n        fetchUrl={request.fetchRomanticMovies}\n      ></Row>\n       <Row\n        isLargeRow={false}\n        title=\"Documentaries\"\n        fetchUrl={request.fetchDocumentaries}\n      ></Row>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}